{"version":3,"sources":["components/InfoBox.js","components/Map.js","components/Table.js","util.js","components/LineGraph.js","App.js","index.js"],"names":["InfoBox","props","total","Card","className","CardContent","Typography","color","title","start","end","cases","duration","seperator","Map","center","zoom","TileLayer","url","attribution","Table","countries","map","country","sortData","data","sortedData","sort","a","b","LineGraph","casesType","useEffect","fetch","then","res","json","chartData","buildChartData","setData","useState","options","legend","display","elements","point","raduis","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","numeral","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","lastDataPoint","date","newDataPoint","x","y","push","length","datasets","backgroundColor","borderColor","App","setCountries","setCountry","countryInfo","setCountryInfo","tableData","setTableData","lat","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","countryList","name","iso2","getCountries","onCountryChange","event","countryCode","target","console","log","long","FormControl","Select","onChange","variant","MenuItem","item","key","todayCases","recovered","todayRecovered","deaths","todayDeaths","tests","testsPerOneMillion","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2bde5f9d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\r\nimport Countup from \"react-countup\";\r\nfunction InfoBox(props) {\r\n\r\n    if(!props.total){\r\n      \r\n        return 'loading';\r\n        \r\n    }\r\n  return (\r\n    <Card className=\"infobox\">\r\n      <CardContent>\r\n        <Typography className=\"infobox_title\" color=\"textSecondary\">\r\n          {props?.title}\r\n        \r\n        </Typography>\r\n\r\n        <h2 className=\"infobox_cases\">\r\n          <Countup start={0} end={props?.cases} duration={2.5} seperator=\",\" />\r\n        </h2>\r\n\r\n        <Typography className=\"infobox_total\" color=\"textSecondary\">\r\n          <Countup start={0} end={props?.total} duration={2.5} seperator=\",\" />{\" \"}\r\n          Total\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default InfoBox;\r\n","import React from 'react'\r\nimport './Map.css'\r\nimport {Map as LeadlerMap, TileLayer} from 'react-leaflet'\r\nfunction Map({center,zoom}) {\r\n    return (\r\n        <div className = \"map\">\r\n                <LeadlerMap center={center} zoom={zoom}>\r\n                    <TileLayer\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    attribution='&copy; <a href = \"http://osm.org/copyright\">\r\n                    OpenStreetMap</a> contributors'\r\n                    />\r\n\r\n                </LeadlerMap>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Map\r\n","import React from 'react'\r\nimport \"./table.css\"\r\nfunction Table({countries}) {\r\n    return (\r\n        <div className = \"table\">\r\n            {countries.map(({country,cases})=>(\r\n                <tr>\r\n                    <td>{country}</td>\r\n            <td>{cases}</td>\r\n                </tr>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","export const sortData = (data)=>{\r\n\r\n    const sortedData = [...data]\r\n\r\n    sortedData.sort((a,b)=>{\r\n        if(a.cases>b.cases){\r\n            return -1\r\n        }\r\n        else{\r\n            return 1\r\n        }\r\n    });\r\n\r\n    return sortedData;\r\n}","import React,{useState,useEffect} from 'react'\r\nimport {Line} from 'react-chartjs-2'\r\nimport numeral from 'numeral'\r\nfunction LineGraph({casesType=\"cases\"}) {\r\n\r\n    useEffect(()=>{\r\n            fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120')\r\n            .then(res=>res.json())\r\n            .then(data=>{\r\n                    const chartData = buildChartData(data)\r\n                    setData(chartData)\r\n            })\r\n    },[casesType])\r\n\r\nconst [data,setData] = useState({})\r\nconst options = {\r\n    legend:{\r\n        display:false,\r\n    },\r\n    elements:{\r\n        point:{\r\n            raduis:0,\r\n        },\r\n    },\r\n    maintainAspectRatio:false,\r\n    tooltips:{\r\n        mode:\"index\",\r\n        intersect:false,\r\n        callbacks:{\r\n            label: function(tooltipItem,data){\r\n                return numeral(tooltipItem.value).format(\"+0,0\")\r\n            },\r\n        },\r\n    },\r\n    scales:{\r\n        xAxes:[\r\n            {\r\n                type:\"time\",\r\n                time:{\r\n                    format:\"MM/DD/YY\",\r\n                    tooltipFormat:\"ll\"\r\n                },\r\n            },\r\n        ],\r\n        yAxes:[\r\n            {\r\n                gridLines:{\r\n                    display:false\r\n                },\r\n                ticks:{\r\n                    callback: function(value,index,values){\r\n                        return numeral(value).format(\"0a\")\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\nconst buildChartData = (data,casesType=\"cases\")=>{\r\n    const chartData = [];\r\n    let lastDataPoint;\r\n\r\n   for(let date in data.cases){\r\n        if(lastDataPoint){\r\n            const newDataPoint={\r\n                x:date,\r\n                y:data[casesType][date] - lastDataPoint\r\n            }\r\n            chartData.push(newDataPoint)\r\n        }\r\n        lastDataPoint = data[casesType][date];\r\n    }\r\n    return chartData;\r\n};\r\n    return (\r\n        <div>\r\n            {data.length>0 && \r\n            <Line\r\n            options={options}\r\n            data={{\r\n                 datasets:[\r\n                     {\r\n                         backgroundColor:\"rgba(204,16,15,0.5)\",\r\n                         borderColor:\"black\",\r\n                         data:data\r\n                     }\r\n                 ]\r\n            }}/>}\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LineGraph\r\n","import React,{useState,useEffect} from \"react\";\nimport { MenuItem, FormControl, Select } from \"@material-ui/core\";\nimport \"./App.css\";\nimport InfoBox from './components/InfoBox'\nimport Map from \"./components/Map\";\nimport {Card,CardContent,} from '@material-ui/core'\nimport Table from './components/Table'\nimport {sortData} from './util'\nimport LineGraph from './components/LineGraph'\nimport \"leaflet/dist/leaflet.css\"\n//https://disease.sh/v3/covid-19/countires\nfunction App() {\n  const [countries,setCountries] = useState([])\n  const [country,setCountry] = useState('worldwide');\n  const [countryInfo,setCountryInfo] = useState({})\n  const [tableData,setTableData] = useState([])\n  const [mapCenter,setMapCenter] = useState({lat:34, lng:-40})\n  const [mapZoom,setMapZoom] = useState(3)\n\n  useEffect(()=>{\n\n      fetch('https://disease.sh/v3/covid-19/all')\n      .then(res=>res.json())\n        .then(data=>{\n          setCountryInfo(data)\n        })\n      const getCountries = async()=>{\n\n        await fetch('https://disease.sh/v3/covid-19/countries')\n        .then(res=>res.json())\n        .then(data=>{\n          const countryList = data.map((country)=>(\n            {\n              name: country.country,\n              value:country.countryInfo.iso2\n            }\n          ));\n          const sortedData = sortData(data)\n          setTableData(sortedData)\n          setCountries(countryList)\n        })\n        \n      }\n      getCountries();\n  },[])\n\n  const onCountryChange = async(event)=>{\n    const countryCode = event.target.value;\n    \n\n    const url = countryCode ===\"worldwide\" ? 'https://disease.sh/v3/covid-19/all':\n    `https://disease.sh./v3/covid-19/countries/${countryCode}`\n\n    await fetch(url)\n    .then(res=>res.json())\n    .then(data=>{\n        setCountryInfo(data)\n        setCountry(countryCode)\n        console.log(data)\n        setMapCenter([data.countryInfo.lat,data.countryInfo.long])\n        setMapZoom(5)\n    })\n\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"app_left\">\n   \n      <div className=\"app_header\">\n        <h1>COVID 19 TRACKER</h1>\n     \n        <FormControl className=\"app_dropdown\">\n          <Select onChange={onCountryChange} variant=\"outlined\" value={country}>\n\n            <MenuItem value=\"worldwide\">World Wide</MenuItem>\n          {countries.map(item=>(\n            <MenuItem key={item.name} value= {item.value}>{item.name}</MenuItem>\n          ))}\n          </Select>\n        </FormControl>\n      </div>\n      {/* Finishing Header */}\n\n      {/* Starting Stats */}\n            <div className=\"app_stats\">\n                <InfoBox \n                title=\"Coronavirus Cases\" total={countryInfo?.cases} cases={countryInfo.todayCases}/>\n            {console.log(countryInfo.cases)}\n                <InfoBox \n                title=\"Recovered\" total={countryInfo.recovered} cases={countryInfo.todayRecovered}/>\n                <InfoBox \n                title=\"Deaths\" total={countryInfo.deaths} cases={countryInfo.todayDeaths}/>\n                <InfoBox\n                title=\"Tests\" total={countryInfo?.tests} cases ={countryInfo?.testsPerOneMillion}\n                />\n            </div>\n           <Map center={mapCenter}\n           zoom={mapZoom}/>\n              </div>\n\n              <Card className=\"app_right\">\n                <CardContent>\n                  <h1>Live Cases By Country</h1>\n                    <Table countries = {tableData}/>\n\n                  <h1>Worldwide New Cases</h1>\n                  <LineGraph/>\n                </CardContent>\n              </Card>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n \n    <App />\n,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}